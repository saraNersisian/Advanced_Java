Script started on 2020-10-19 23:18:08-07:00 [TERM="xterm" TTY="/dev/pts/5" COLUMNS="117" LINES="70"]
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m pe[Kwd
/user/saran/cs1400/project
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m ls -l
total 82
-rw------- 1 saran cpp 1803 Sep  4 12:53 Calculations.class
-rw------- 1 saran cpp 1552 Sep  4 12:29 Calculations.java
-rw------- 1 saran cpp 2852 Oct 19 23:15 Fraction.class
-rw------- 1 saran cpp 4609 Oct 19 23:15 Fraction.java
-rw------- 1 saran cpp 1756 Oct 19 23:15 FractionDemo.class
-rw------- 1 saran cpp 1645 Oct 19 22:56 FractionDemo.java
-rw------- 1 saran cpp 1003 Aug 31 10:01 Pay.class
-rw-r--r-- 1 saran cpp  984 Aug 31 10:12 Pay.java
-rw------- 1 saran cpp 2523 Oct  5 22:58 RockPaperScissorsGame.class
-rw------- 1 saran cpp 3604 Oct  5 22:56 RockPaperScissorsGame.java
-rw------- 1 saran cpp 1724 Sep 14 22:12 Season.class
-rw------- 1 saran cpp 2424 Sep 14 22:11 Season.java
-rw------- 1 saran cpp 1654 Oct 10 14:24 Temperature.class
-rw------- 1 saran cpp 1793 Oct 10 14:24 Temperature.java
-rw------- 1 saran cpp 2534 Oct 10 14:27 TemperatureDemo.class
-rw------- 1 saran cpp 2695 Oct 10 14:26 TemperatureDemo.java
-rw------- 1 saran cpp 2356 Aug 31 10:15 [0m[00;32mpj1.txt[0m
-rw------- 1 saran cpp 4674 Sep  4 12:55 [00;32mpj2.txt[0m
-rw------- 1 saran cpp 8479 Sep 14 22:16 [00;32mpj3.txt[0m
-rw------- 1 saran cpp 8035 Oct  5 23:01 [00;32mpj4.txt[0m
-rw------- 1 saran cpp 7982 Oct 10 14:29 [00;32mpj5.txt[0m
-rw------- 1 saran cpp    0 Oct 19 23:18 [00;32mpj6.txt[0m
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m ls -l[2Ppwdexitjavac FractionDemo.java[2Pcat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4P.javaDemo.java[4P.java
// Sara Nersisian
// CS1400 , section 05
// Priject 6 - Arithmetic Operations with Fractions
// 10/19/2020
import java.util.Scanner;
import  java.text.DecimalFormat;
public class Fraction
{
   private int numerator;
   private int denominator;
   private static int created =0;
   private static int num;
   private static int den;
   public Fraction()
   {
      numerator = 0;
      denominator = 1;
   }
   public Fraction(int numerator, int denominator)
   {
      if(denominator == 0)
      {
         this.numerator = 0;
         this.denominator = 1;
         System.out.println("denominator cannot be 0\nthe fraction is set to 0/1");
         created++;
      }
      else if(numerator == 0 && denominator != 1)
      {
         this.numerator = 0;
         this.denominator = 1;
         created++;
      }
      else if(denominator < 0 && numerator < 0)
      {
         this.numerator = -1 * numerator;
         this.denominator = -1 * denominator;
         Fraction result2 = new Fraction();
         result2=normalize();
         created++;
      }
      else if(denominator < 0 && numerator > 0)
      {
          this.numerator = -1 * numerator;
          this.denominator = -1 * denominator;
          Fraction result1 = new Fraction();
          result1=normalize();
          created++;
      }
      else
      {
         this.numerator = numerator;
         this.denominator = denominator;
         created++;
         Fraction result = new Fraction();
         result=normalize();
      }
   }
   public Fraction(int numerator, int denominator, int n)
   {
      if(denominator ==0)
      {
         this.numerator = 0;
         this.denominator = 1;
      }
      else if( numerator ==0 && denominator !=1)
      {
         this.numerator=0;
         this.denominator=1;
      }
      else
      {
         this.numerator = numerator;
         this.denominator = denominator;
      }
      created++;
   }
   private Fraction normalize()
   {
      Fraction result = new Fraction();
      int common = 0;
      int num = Math.abs(numerator);
      int den = Math.abs(denominator);
      if (num > den)
         common = gcd(num, den);
      else if (num < den)
         common = gcd(den, num);
      else  
         common = num;
      numerator = numerator / common;
      denominator = denominator / common;
      return result;
   }
   private int gcd (int num1, int num2)
   {
      while (num1 != num2)
      {
         if (num1 > num2)
            num1 = num1 - num2;
         else
            num2 = num2 - num1;
      }
      return num1;
   }
   public Fraction add(Fraction otherFraction)
   {
      int resultDenominator = this.denominator * otherFraction.denominator;
      int resultNumerator = this.numerator * otherFraction.denominator + otherFraction.numerator * this.denominator;
      Fraction AddFraction = new Fraction( resultNumerator, resultDenominator,0 );
      return AddFraction;
   } 
   public Fraction subtract(Fraction otherFraction)
   {
      int resultDenominator = this.denominator * otherFraction.denominator;
      int resultNumerator = this.numerator * otherFraction.denominator - otherFraction.numerator * this.denominator;
      Fraction SubtractFraction = new Fraction( resultNumerator, resultDenominator,0 );
      return SubtractFraction;
   }
   public Fraction multiply(Fraction otherFraction)
   {
      int resultDenominator = this.denominator * otherFraction.denominator;
      int resultNumerator = this.numerator * otherFraction.numerator ;
      Fraction MultiplyFraction = new Fraction( resultNumerator, resultDenominator,0 );
      return MultiplyFraction;
   }
   public Fraction division(Fraction otherFraction)
   { 
      int resultDenominator = this.denominator * otherFraction.numerator;
      int resultNumerator = this.numerator * otherFraction.denominator ;
      Fraction DivisionFraction = new Fraction( resultNumerator, resultDenominator,0);
      return DivisionFraction;
   }
   public String toString()
   {
      return numerator + "/" + denominator;
   }
   public void printAsFloat()
   {
      DecimalFormat f = new DecimalFormat("#.#######");
      System.out.print(f.format((double)numerator/(double)denominator));
   }
   public static Fraction read()
   {
      Scanner kb = new Scanner(System.in);
      System.out.print("enter an integer numerator: ");
      num = kb.nextInt();
      System.out.print("enter an integer denominator: ");
      den = kb.nextInt();
      Fraction input = new Fraction(num, den);
      return input;
   }
   public static int numberOfFractions()
   {
      return created;
   }
}
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m cat Fraction.javals -l[K[2Ppwdexitjavac FractionDemo.java[2Pcat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
// Sara Nersisian
// CS1400 , section 05
// Project 6 - Arithmetic Operations with Fractions
//10/19/2020
import java.util.Scanner;
public class FractionDemo
{
   public static void main(String args[])
   {
      Scanner kb = new Scanner(System.in);
      char yesNo = 'y';		 
      do
      {
         System.out.println("Please enter 2 fractions --");
         System.out.println("Fraction 1: ");
         Fraction f1 = Fraction.read();
	      
         System.out.println("Fraction 2: ");
         Fraction f2 = Fraction.read();  
         Fraction result = new Fraction();
	     
         result=f1.add(f2);
         System.out.print(f1.toString() + " + " + f2.toString() + " = " + result.toString() + " = " );
         result.printAsFloat();
         System.out.println();
         result=f1.subtract(f2);
         System.out.print(f1.toString() + " - " + f2.toString() + " = " + result.toString() + " = " );
         result.printAsFloat();
         System.out.println();
         result=f1.multiply(f2);
         System.out.print(f1.toString() + " * " + f2.toString() + " = " + result.toString() + " = " );
         result.printAsFloat();
         System.out.println();
         result=f1.division(f2);
         System.out.print(f1.toString() + " / " + f2.toString() + " = " + result.toString() + " = " );
         result.printAsFloat();
         System.out.println();
	      
         System.out.print("\nDo you want to continue ('Y' or 'y' for yes) ? ");
         yesNo=kb.nextLine().charAt(0);
      }while(yesNo == 'y' ||yesNo == 'Y');
      System.out.println(Fraction.numberOfFractions() + " fractions have been created.");
   }
}


]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m javac FractionDemo.java
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m java Fraction.java
Error: Could not find or load main class Fraction.java
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m java Fraction
Error: Main method not found in class Fraction, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m java FractionDemo
Please enter 2 fractions --
Fraction 1: 
enter an integer numerator: 1
enter an integer denominator: 2
Fraction 2: 
enter an integer numerator: 1
enter an integer denominator: 3
1/2 + 1/3 = 5/6 = 0.8333333
1/2 - 1/3 = 1/6 = 0.1666667
1/2 * 1/3 = 1/6 = 0.1666667
1/2 / 1/3 = 3/2 = 1.5

Do you want to continue ('Y' or 'y' for yes) ? n
6 fractions have been created.
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m java FractionDemo
Please enter 2 fractions --
Fraction 1: 
enter an integer numerator: 3
enter an integer denominator: 0
denominator cannot be 0
the fraction is set to 0/1
Fraction 2: 
enter an integer numerator: 6
enter an integer denominator: -2
0/1 + -3/1 = -3/1 = -3
0/1 - -3/1 = 3/1 = 3
0/1 * -3/1 = 0/1 = 0
0/1 / -3/1 = 0/1 = 0

Do you want to continue ('Y' or 'y' for yes) ? y
Please enter 2 fractions --
Fraction 1: 
enter an integer numerator: 0
enter an integer denominator: -5
Fraction 2: 
enter an integer numerator: -20
enter an integer denominator: -5
0/1 + 4/1 = 4/1 = 4
0/1 - 4/1 = -4/1 = -4
0/1 * 4/1 = 0/1 = 0
0/1 / 4/1 = 0/1 = 0

Do you want to continue ('Y' or 'y' for yes) ? n
12 fractions have been created.
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m java FractionDemo
Please enter 2 fractions --
Fraction 1: 
enter an integer numerator: 3
enter an integer denominator: 0
denominator cannot be 0
the fraction is set to 0/1
Fraction 2: 
enter an integer numerator: 6
enter an integer denominator: -2
0/1 + -3/1 = -3/1 = -3
0/1 - -3/1 = 3/1 = 3
0/1 * -3/1 = 0/1 = 0
0/1 / -3/1 = 0/1 = 0

Do you want to continue ('Y' or 'y' for yes) ? y
Please enter 2 fractions --
Fraction 1: 
enter an integer numerator: 0
enter an integer denominator: -5
Fraction 2: 
enter an integer numerator: -5
enter an integer denominator: 20
0/1 + -1/4 = -1/4 = -0.25
0/1 - -1/4 = 1/4 = 0.25
0/1 * -1/4 = 0/1 = 0
0/1 / -1/4 = 0/1 = 0

Do you want to continue ('Y' or 'y' for yes) ? n
12 fractions have been created.
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m java FractionDemo
Please enter 2 fractions --
Fraction 1: 
enter an integer numerator: 12
enter an integer denominator: 36
Fraction 2: 
enter an integer numerator: 70
enter an integer denominator: 84
1/3 + 5/6 = 21/18 = 1.1666667
1/3 - 5/6 = -9/18 = -0.5
1/3 * 5/6 = 5/18 = 0.2777778
1/3 / 5/6 = 6/15 = 0.4

Do you want to continue ('Y' or 'y' for yes) ? y
Please enter 2 fractions --
Fraction 1: 
enter an integer numerator: -8
enter an integer denominator: 2
Fraction 2: 
enter an integer numerator: 10
enter an integer denominator: 10
-4/1 + 1/1 = -3/1 = -3
-4/1 - 1/1 = -5/1 = -5
-4/1 * 1/1 = -4/1 = -4
-4/1 / 1/1 = -4/1 = -4

Do you want to continue ('Y' or 'y' for yes) ? 13
12 fractions have been created.
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m java FractionDemo
Please enter 2 fractions --
Fraction 1: 
enter an integer numerator: 13
enter an integer denominator: -1
Fraction 2: 
enter an integer numerator: 0
enter an integer denominator: 9
-13/1 + 0/1 = -13/1 = -13
-13/1 - 0/1 = -13/1 = -13
-13/1 * 0/1 = 0/1 = 0
-13/1 / 0/1 = 0/1 = 0

Do you want to continue ('Y' or 'y' for yes) ? y
Please enter 2 fractions --
Fraction 1: 
enter an integer numerator: 1212
enter an integer denominator: 123
Fraction 2: 
enter an integer numerator: -123
enter an integer denominator: -1212
404/41 + 41/404 = 164897/16564 = 9.9551437
404/41 - 41/404 = 161535/16564 = 9.7521734
404/41 * 41/404 = 16564/16564 = 1
404/41 / 41/404 = 163216/1681 = 97.0945866

Do you want to continue ('Y' or 'y' for yes) ? y
Please enter 2 fractions --
Fraction 1: 
enter an integer numerator: 3
enter an integer denominator: -20
Fraction 2: 
enter an integer numerator: -2
enter an integer denominator: 9
-3/20 + -2/9 = -67/180 = -0.3722222
-3/20 - -2/9 = 13/180 = 0.0722222
-3/20 * -2/9 = 6/180 = 0.0333333
-3/20 / -2/9 = -27/-40 = 0.675

Do you want to continue ('Y' or 'y' for yes) ? n
18 fractions have been created.
]0;saran@costello:~/cs1400/project[01;32msaran@costello[01;34m ~/cs1400/project $[00m exit
exit

Script done on 2020-10-19 23:21:43-07:00 [COMMAND_EXIT_CODE="0"]
